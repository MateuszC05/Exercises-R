ggplot(plots, aes(DF$USUBJID, DF$AVAL, color = DF$SEX))+
geom_point()
})
output$plot2 = renderPlot({
plots2 <- DF[DF$ACTARM,]
ggplot(plots2, aes(DF$AVAL, DF$ACTARMCD, color = DF$SEX, fill - DF$SEX)) +
geom_bar()
})
}
runApp()
function(input, output) {
output$table <- DT::renderDataTable(DT::datatable({
data1 <- DF
if (input$SEX != "All") {
data1 <- DF[DF$SEX == input$SEX,]
}
if (input$AGE != "All") {
data1 <- DF[DF$AGE == DF$AGE,]
}
if (input$RACE != "All") {
data1 <- DF[DF$RACE == DF$RACE,]
}
if (input$BMRKR2 != 'All'){
data1 <- DF[DF$BMRKR2 == input$BMRKR2,]
}
if (input$LBTESTCD != 'All'){
data1 <- DF[DF$LBTESTCD == input$LBTESTCD,]
}
if (input$LBCAT != "All"){
data1 <- DF[DF$LBCAT == input$LBCAT,]
}
if (input$ACTARM != "All"){
data1 <- DF[DF$ACTARM == input$ACTARM,]
}
data1
}))
output$trend = renderPlot({
plots <- DF[DF$LBTESTCD,]
ggplot(plots, aes(DF$USUBJID, DF$AVAL, color = DF$SEX))+
geom_point()
})
output$plot2 = renderPlot({
plots2 <- DF[DF$ACTARM,]
ggplot(plots2, aes(DF$AVAL, DF$ACTARMCD, color = DF$SEX, fill - DF$SEX)) +
geom_density()
})
}
runApp()
function(input, output) {
output$table <- DT::renderDataTable(DT::datatable({
data1 <- DF
if (input$SEX != "All") {
data1 <- DF[DF$SEX == input$SEX,]
}
if (input$AGE != "All") {
data1 <- DF[DF$AGE == DF$AGE,]
}
if (input$RACE != "All") {
data1 <- DF[DF$RACE == DF$RACE,]
}
if (input$BMRKR2 != 'All'){
data1 <- DF[DF$BMRKR2 == input$BMRKR2,]
}
if (input$LBTESTCD != 'All'){
data1 <- DF[DF$LBTESTCD == input$LBTESTCD,]
}
if (input$LBCAT != "All"){
data1 <- DF[DF$LBCAT == input$LBCAT,]
}
if (input$ACTARM != "All"){
data1 <- DF[DF$ACTARM == input$ACTARM,]
}
data1
}))
output$trend = renderPlot({
plots <- DF[DF$LBTESTCD,]
ggplot(plots, aes(DF$USUBJID, DF$AVAL, color = DF$SEX))+
geom_point()
})
output$plot2 = renderPlot({
plots2 <- DF[DF$ACTARM,]
ggplot(plots2, aes(DF$AVAL, DF$ACTARMCD, color = DF$SEX, fill - DF$SEX)) +
geom_polygon()
})
}
runApp()
function(input, output) {
output$table <- DT::renderDataTable(DT::datatable({
data1 <- DF
if (input$SEX != "All") {
data1 <- DF[DF$SEX == input$SEX,]
}
if (input$AGE != "All") {
data1 <- DF[DF$AGE == DF$AGE,]
}
if (input$RACE != "All") {
data1 <- DF[DF$RACE == DF$RACE,]
}
if (input$BMRKR2 != 'All'){
data1 <- DF[DF$BMRKR2 == input$BMRKR2,]
}
if (input$LBTESTCD != 'All'){
data1 <- DF[DF$LBTESTCD == input$LBTESTCD,]
}
if (input$LBCAT != "All"){
data1 <- DF[DF$LBCAT == input$LBCAT,]
}
if (input$ACTARM != "All"){
data1 <- DF[DF$ACTARM == input$ACTARM,]
}
data1
}))
output$trend = renderPlot({
plots <- DF[DF$LBTESTCD,]
ggplot(plots, aes(DF$USUBJID, DF$AVAL, color = DF$SEX))+
geom_point()
})
output$plot2 = renderPlot({
plots2 <- DF[DF$ACTARM,]
ggplot(plots2, aes(DF$AVAL, DF$ACTARMCD, color = DF$SEX, fill - DF$SEX)) +
geom_spoke()
})
}
runApp()
function(input, output) {
output$table <- DT::renderDataTable(DT::datatable({
data1 <- DF
if (input$SEX != "All") {
data1 <- DF[DF$SEX == input$SEX,]
}
if (input$AGE != "All") {
data1 <- DF[DF$AGE == DF$AGE,]
}
if (input$RACE != "All") {
data1 <- DF[DF$RACE == DF$RACE,]
}
if (input$BMRKR2 != 'All'){
data1 <- DF[DF$BMRKR2 == input$BMRKR2,]
}
if (input$LBTESTCD != 'All'){
data1 <- DF[DF$LBTESTCD == input$LBTESTCD,]
}
if (input$LBCAT != "All"){
data1 <- DF[DF$LBCAT == input$LBCAT,]
}
if (input$ACTARM != "All"){
data1 <- DF[DF$ACTARM == input$ACTARM,]
}
data1
}))
output$trend = renderPlot({
plots <- DF[DF$LBTESTCD,]
ggplot(plots, aes(DF$USUBJID, DF$AVAL, color = DF$SEX))+
geom_point()
})
output$plot2 = renderPlot({
plots2 <- DF[DF$ACTARM,]
ggplot(plots2, aes(DF$AVAL, DF$ACTARMCD, color = DF$SEX,)) +
geom_quantile()
})
}
runApp()
function(input, output) {
output$table <- DT::renderDataTable(DT::datatable({
data1 <- DF
if (input$SEX != "All") {
data1 <- DF[DF$SEX == input$SEX,]
}
if (input$AGE != "All") {
data1 <- DF[DF$AGE == DF$AGE,]
}
if (input$RACE != "All") {
data1 <- DF[DF$RACE == DF$RACE,]
}
if (input$BMRKR2 != 'All'){
data1 <- DF[DF$BMRKR2 == input$BMRKR2,]
}
if (input$LBTESTCD != 'All'){
data1 <- DF[DF$LBTESTCD == input$LBTESTCD,]
}
if (input$LBCAT != "All"){
data1 <- DF[DF$LBCAT == input$LBCAT,]
}
if (input$ACTARM != "All"){
data1 <- DF[DF$ACTARM == input$ACTARM,]
}
data1
}))
output$trend = renderPlot({
plots <- DF[DF$LBTESTCD,]
ggplot(plots, aes(DF$USUBJID, DF$AVAL, color = DF$SEX))+
geom_point()
})
output$plot2 = renderPlot({
plots2 <- DF[DF$ACTARM,]
ggplot(plots2, aes(DF$AVAL, DF$ACTARMCD, color = DF$SEX)) +
geom_quantile()
})
}
runApp()
function(input, output) {
output$table <- DT::renderDataTable(DT::datatable({
data1 <- DF
if (input$SEX != "All") {
data1 <- DF[DF$SEX == input$SEX,]
}
if (input$AGE != "All") {
data1 <- DF[DF$AGE == DF$AGE,]
}
if (input$RACE != "All") {
data1 <- DF[DF$RACE == DF$RACE,]
}
if (input$BMRKR2 != 'All'){
data1 <- DF[DF$BMRKR2 == input$BMRKR2,]
}
if (input$LBTESTCD != 'All'){
data1 <- DF[DF$LBTESTCD == input$LBTESTCD,]
}
if (input$LBCAT != "All"){
data1 <- DF[DF$LBCAT == input$LBCAT,]
}
if (input$ACTARM != "All"){
data1 <- DF[DF$ACTARM == input$ACTARM,]
}
data1
}))
output$trend = renderPlot({
plots <- DF[DF$LBTESTCD,]
ggplot(plots, aes(DF$USUBJID, DF$AVAL, color = DF$SEX))+
geom_point()
})
output$plot2 = renderPlot({
plots2 <- DF[DF$ACTARM,]
ggplot(plots2, aes(DF$AVAL, DF$ACTARMCD, color = DF$SEX)) +
geom_point()
})
}
runApp()
runApp()
output$plot2 = renderPlot({
plots2 <- DF[DF$ACTARM,]
ggplot(plots2, aes(DF$AVAL, DF$ACTARMCD, color = DF$SEX)) +
geom_polygon()
})
function(input, output) {
output$table <- DT::renderDataTable(DT::datatable({
data1 <- DF
if (input$SEX != "All") {
data1 <- DF[DF$SEX == input$SEX,]
}
if (input$AGE != "All") {
data1 <- DF[DF$AGE == DF$AGE,]
}
if (input$RACE != "All") {
data1 <- DF[DF$RACE == DF$RACE,]
}
if (input$BMRKR2 != 'All'){
data1 <- DF[DF$BMRKR2 == input$BMRKR2,]
}
if (input$LBTESTCD != 'All'){
data1 <- DF[DF$LBTESTCD == input$LBTESTCD,]
}
if (input$LBCAT != "All"){
data1 <- DF[DF$LBCAT == input$LBCAT,]
}
if (input$ACTARM != "All"){
data1 <- DF[DF$ACTARM == input$ACTARM,]
}
data1
}))
output$trend = renderPlot({
plots <- DF[DF$LBTESTCD,]
ggplot(plots, aes(DF$USUBJID, DF$AVAL, color = DF$SEX))+
geom_point()
})
output$plot2 = renderPlot({
plots2 <- DF[DF$ACTARM,]
ggplot(plots2, aes(DF$AVAL, DF$ACTARMCD, color = DF$SEX)) +
geom_polygon()
})
}
runApp()
trend
trend
plots <- DF[DF$LBTESTCD,]
ggplot(plots, aes(DF$USUBJID, DF$AVAL, color = DF$SEX))+
geom_point()
output$trend = renderPlot({
plots <- DF[DF$LBTESTCD,]
ggplot(plots, aes(DF$USUBJID, DF$AVAL, color = DF$SEX))+
geom_point()
})
output$plot2 = renderPlot({
plots2 <- DF[DF$ACTARM,]
ggplot(plots2, aes(DF$AVAL, DF$ACTARMCD, color = DF$SEX)) +
geom_polygon()
})
plots2 <- DF[DF$ACTARM,]
ggplot(plots2, aes(DF$AVAL, DF$ACTARMCD, color = DF$SEX)) +
geom_polygon()
function(input, output) {
output$table <- DT::renderDataTable(DT::datatable({
data1 <- DF
if (input$SEX != "All") {
data1 <- DF[DF$SEX == input$SEX,]
}
if (input$AGE != "All") {
data1 <- DF[DF$AGE == DF$AGE,]
}
if (input$RACE != "All") {
data1 <- DF[DF$RACE == DF$RACE,]
}
if (input$BMRKR2 != 'All'){
data1 <- DF[DF$BMRKR2 == input$BMRKR2,]
}
if (input$LBTESTCD != 'All'){
data1 <- DF[DF$LBTESTCD == input$LBTESTCD,]
}
if (input$LBCAT != "All"){
data1 <- DF[DF$LBCAT == input$LBCAT,]
}
if (input$ACTARM != "All"){
data1 <- DF[DF$ACTARM == input$ACTARM,]
}
data1
}))
output$trend = renderPlot({
plots <- DF[DF$LBTESTCD,]
ggplot(plots, aes(DF$USUBJID, DF$AVAL, color = DF$SEX))+
geom_point()
})
output$plot2 = renderPlot({
plots2 <- DF[DF$ACTARM,]
ggplot(plots2, aes(DF$AVAL, DF$ACTARMCD, color = DF$SEX)) +
geom_dotplot()
})
}
runApp()
function(input, output) {
output$table <- DT::renderDataTable(DT::datatable({
data1 <- DF
if (input$SEX != "All") {
data1 <- DF[DF$SEX == input$SEX,]
}
if (input$AGE != "All") {
data1 <- DF[DF$AGE == DF$AGE,]
}
if (input$RACE != "All") {
data1 <- DF[DF$RACE == DF$RACE,]
}
if (input$BMRKR2 != 'All'){
data1 <- DF[DF$BMRKR2 == input$BMRKR2,]
}
if (input$LBTESTCD != 'All'){
data1 <- DF[DF$LBTESTCD == input$LBTESTCD,]
}
if (input$LBCAT != "All"){
data1 <- DF[DF$LBCAT == input$LBCAT,]
}
if (input$ACTARM != "All"){
data1 <- DF[DF$ACTARM == input$ACTARM,]
}
data1
}))
output$trend = renderPlot({
plots <- DF[DF$LBTESTCD,]
ggplot(plots, aes(DF$USUBJID, DF$AVAL, color = DF$SEX))+
geom_point()
})
output$plot2 = renderPlot({
plots2 <- DF[DF$ACTARM,]
ggplot(plots2, aes(DF$AVAL, DF$ACTARMCD, color = DF$SEX)) +
geom_bin2d()
})
}
runApp()
function(input, output) {
output$table <- DT::renderDataTable(DT::datatable({
data1 <- DF
if (input$SEX != "All") {
data1 <- DF[DF$SEX == input$SEX,]
}
if (input$AGE != "All") {
data1 <- DF[DF$AGE == DF$AGE,]
}
if (input$RACE != "All") {
data1 <- DF[DF$RACE == DF$RACE,]
}
if (input$BMRKR2 != 'All'){
data1 <- DF[DF$BMRKR2 == input$BMRKR2,]
}
if (input$LBTESTCD != 'All'){
data1 <- DF[DF$LBTESTCD == input$LBTESTCD,]
}
if (input$LBCAT != "All"){
data1 <- DF[DF$LBCAT == input$LBCAT,]
}
if (input$ACTARM != "All"){
data1 <- DF[DF$ACTARM == input$ACTARM,]
}
data1
}))
output$trend = renderPlot({
plots <- DF[DF$LBTESTCD,]
ggplot(plots, aes(DF$USUBJID, DF$AVAL, color = DF$SEX))+
geom_point()
})
output$plot2 = renderPlot({
plots2 <- DF[DF$ACTARM,]
ggplot(plots2, aes(DF$AVAL, DF$ACTARMCD, color = DF$SEX)) +
geom_abline()
})
}
runApp()
function(input, output) {
output$table <- DT::renderDataTable(DT::datatable({
data1 <- DF
if (input$SEX != "All") {
data1 <- DF[DF$SEX == input$SEX,]
}
if (input$AGE != "All") {
data1 <- DF[DF$AGE == DF$AGE,]
}
if (input$RACE != "All") {
data1 <- DF[DF$RACE == DF$RACE,]
}
if (input$BMRKR2 != 'All'){
data1 <- DF[DF$BMRKR2 == input$BMRKR2,]
}
if (input$LBTESTCD != 'All'){
data1 <- DF[DF$LBTESTCD == input$LBTESTCD,]
}
if (input$LBCAT != "All"){
data1 <- DF[DF$LBCAT == input$LBCAT,]
}
if (input$ACTARM != "All"){
data1 <- DF[DF$ACTARM == input$ACTARM,]
}
data1
}))
output$trend = renderPlot({
plots <- DF[DF$LBTESTCD,]
ggplot(plots, aes(DF$USUBJID, DF$AVAL, color = DF$SEX))+
geom_point()
})
output$plot2 = renderPlot({
plots2 <- DF[DF$ACTARM,]
ggplot(plots2, aes(DF$AVAL, DF$ACTARMCD, color = DF$SEX)) +
geom_boxplot()
})
}
runApp()
shinyUI(fluidPage(
titlePanel("Exercise"),
fluidRow(
column(4,
selectInput("SEX",
"Sex:",
c("All",
unique(as.character(DF$SEX))))
),
column(4,
selectInput("RACE",
"Race:",
c("All",
unique(as.character(DF$RACE))))
),
column(4,
selectInput("AGE",
"Age:",
c("All",
unique(as.character(sort(DF$AGE))))
)
),
column(4,
selectInput("BMRKR2",
"Biomarker2:",
c("All",
unique(as.character(DF$BMRKR2))))
),
column(4,
selectInput("LBTESTCD",
"LBTESTCD:",
c("All",
unique(as.character(DF$LBTESTCD))))
),
column(4,
selectInput("LBCAT",
"LBCAT:",
c('All',
unique(as.character(DF$LBCAT))))
),
column(4,
selectInput("ACTARM",
"ACTARM:",
c('All',
unique(as.character(DF$ACTARM))))
),
column(4,
selectInput("ACATARMCD",
"ACATARMCD:",
c('All',
unique(as.character(DF$ACTARMCD))))
),
DT::dataTableOutput("table"),
mainPanel(
plotOutput('trend'),
plotOutput("plot2")
)
)))
Random_Patient <- read.table('C:/Users/HARDPC/Desktop/Laczenie/Random_PatientLevelInfo_2020.tsv',sep = '\t',header = TRUE)
runApp()
